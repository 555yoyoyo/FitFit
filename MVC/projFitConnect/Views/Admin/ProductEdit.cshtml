@{
    ViewData["Title"] = "ProductEdit";
}

@section Styles {
    <style>
        #content {
            width: 70%;
            overflow: hidden;
            margin: 5px auto;
        }

        .article {
            width: 64%;
            float: right;
        }

        .section {
            background-color: #FBFFFD;
            border: 3px solid #007979;
            border-radius: 15px;
            margin: 30px 0;
            padding: 20px 26px;
            line-height: 2em;
        }

        #divUneditProductimg {
            width: 70%;
            background-color: #FBFFFD;
            border: 3px solid #007979;
            border-radius: 15px;
            margin:0 auto;
            display:none;
        }

        .aside {
            width: 30%;
            float: left;
        }

        .zoom-container {
            overflow: hidden;
        }

        .zoom-img {
            transition: transform 0.5s ease;
            border-radius: 33px 0 0 0;
        }

        .zoom-container:hover .zoom-img {
            transform: scale(1.2);
        }

        .btn-remove {
            position: relative;
            border-color: #E0E0E0;
            text-align: center;
            display: inline-block;
        }

            .btn-remove img {
                display: block;
                max-height: 150px;
                transition: opacity 0.3s;
            }

            .btn-remove .remove-icon {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                font-size: 24px;
                color: red;
                display: none; /* Initially hidden */
            }

            .btn-remove::before {
                content: '';
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
                background-color: rgba(0, 0, 0, 0.5); /* Mist effect */
                opacity: 0;
                transition: opacity 0.3s;
            }

            .btn-remove:hover::before {
                opacity: 1;
            }

            .btn-remove:hover img {
                opacity: 0.3;
            }

            .btn-remove:hover .remove-icon {
                display: block;
            }

            .btn-remove:hover {
                background-color: #FFECF5;
                border-color: #FF5151;
            }

    </style>
}

<h1 style="padding-left:64px;margin:15px 0;">商品編輯</h1>

<div id="content">
    <aside class="aside">
        <section class="section">
            <h3 class="subtital">商品顯示圖</h3>
            <div id="carouselAddProduct" class="carousel slide">
                <div class="carousel-inner" id="divimage">
                    <div class="carousel-item active">
                        <img id="preview" src="" alt="Image Preview" style="max-width: 100%; height: auto; display: block;">
                    </div>
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselAddProduct" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselAddProduct" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
            <div class="mb-3">
                <label for="formFile" class="form-label">更換預覽商品圖</label>
                <input class="form-control" type="file" id="formFile">
            </div>
            <div class="mb-3">
                <label for="formFileMultiple" class="form-label">新增更多商品圖</label>
                <input class="form-control" type="file" id="formFileMultiple" multiple>
            </div>
            <div class="mb-3" id="diveditimages">
                <button class="btn btn-outline-success" type="button" id="btnUneditProductimg">
                    更改附件商品圖
                </button>
            </div>
        </section>
    </aside>

    <article class="article">
        <section class="section">
            <h3 class="subtital">商品介紹</h3>
            <div class="mb-3">
                <label for="inpproductName" class="form-label">商品名稱</label>
                <input type="text" class="form-control" id="inpproductName">
            </div>
            <div class="row mb-3">
                <div class="col-4 ">
                    <label class="form-label">類別</label>
                    <select class="form-select" aria-label="Default select example" id="selecategory">
                        <option selected value="" id="category"></option>
                        <option value="1">乳清蛋白</option>
                        <option value="2">健康食品</option>
                        <option value="3">運動配件</option>
                        <option value="4">健身器材</option>
                        <option value="5">服飾</option>
                        <option value="6">其他</option>
                    </select>
                </div>
                <div class="col-4 m-auto">
                    <label for="inpunitPrice" class="form-label">商品單價</label>
                    <div class="input-group">
                        <span class="input-group-text">$</span>
                        <input type="number" class="form-control" id="inpunitPrice" min="20" max="20000" step="1" value="20" style="text-align:center;">
                    </div>
                </div>
            </div>
            <div class="mb-3">
                <label for="inpproductDetail" class="form-label">商品介紹</label>
                <textarea class="form-control" id="inpproductDetail" rows="3" style="min-height: 256px"></textarea>
            </div>
            <div style="text-align:right;">
                <a href="https://localhost:7168/Admin/ProductList" class="btn btn-secondary">取消</a>
                <button type="button" class="btn btn-success" id="btnrevise" onclick="getall()">確認修改</button>
            </div>
        </section>
    </article>
</div>
    <div id="divUneditProductimg">
        <button class="btn btn-remove" onclick="removeTheImage(this)" style="display:none;">
            <img src="https://pbs.twimg.com/profile_images/1001436225402621952/bdez2BKN_400x400.jpg" alt="UneditProductimg" style="max-height:150px;">
            <span class="remove-icon">X</span>
        </button>
    </div>
@section Scripts {
    <script>
        let productID = @ViewBag.id;
        let url = 'https://localhost:7199/api/Products/' + productID;
        const productImage = document.querySelector('#divimage');
        const productName = document.querySelector('#inpproductName');
        const selectedcategory = document.querySelector('#selecategory');
        const category = document.querySelector('#category');
        const thePrice = document.querySelector('#inpunitPrice');
        const detail = document.querySelector('#inpproductDetail');
        const revise = document.querySelector('#btnrevise');
        const divUneditProductimg = document.getElementById('divUneditProductimg');
        var folded = true;
        const putData = {
            "productName": "",
            "categoryId": 0,
            "productUnitprice": 20,
            "productDetail": "",
            "productImage": "",
            "imageBase64": "",
            "images": [],
            "moreBase64Images": []
        }        

        //預覽選擇影像&轉成base64
        document.getElementById('formFile').addEventListener('change', function (event) {
            const fileInput = event.target;
            const files = fileInput.files;
            const preview = document.getElementById('preview');
            if (files.length > 0) {
                const file = files[0];
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                };
                reader.readAsDataURL(file);

                const byteReader = new FileReader();
                byteReader.onload = function (e) {
                    const arrayBuffer = e.target.result;
                    const byteArray = new Uint8Array(arrayBuffer);
                    const base64String = btoa(String.fromCharCode.apply(null, byteArray));
                    putData.productImage = file.name;
                    putData.imageBase64 = base64String;
                    console.log('Image in base64:', base64String);
                };
                byteReader.readAsArrayBuffer(file);
            }
        });
        // 多張影像
        document.getElementById('formFileMultiple').addEventListener('change', function (event) {
            const fileInput = event.target;
            const files = fileInput.files;

            Array.from(files).forEach(file => {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const newPreview = `<div class="carousel-item">
                                                            <img src="${e.target.result}" class="d-block w-100" alt="Image Preview">
                                                        </div>`;
                    productImage.insertAdjacentHTML('beforeend', newPreview);
                };
                reader.readAsDataURL(file);

                const byteReader = new FileReader();
                byteReader.onload = function (e) {
                    const arrayBuffer = e.target.result;
                    const byteArray = new Uint8Array(arrayBuffer);
                    const base64String = btoa(String.fromCharCode.apply(null, byteArray));
                    console.log('file.name:', file.name);
                    console.log('Image in base64:', base64String);
                    putData.images.push({ productImages: file.name });
                    putData.moreBase64Images.push(base64String);
                };
                byteReader.readAsArrayBuffer(file);
            });
        });
        //移除舊影像
        document.querySelector('#btnUneditProductimg').addEventListener('click', () => {
            if (folded) {
                folded = !folded
                divUneditProductimg.style.display = 'block';
            }
            else {
                folded = !folded
                divUneditProductimg.style.display = 'none';
            }
        })
        async function removeTheImage(button) {
            if (confirm('確定移除此影像?')) {
                const img = button.querySelector('img');
                const imgId = img ? img.id : null;
                console.log(imgId);
                if (!imgId) {
                    console.error('Image ID not found');
                    return;
                }
                //https://localhost:7199/api/Products/image?id=46&productImage=Dinosaur2Q.jpg
                let deleteUrl = 'https://localhost:7199/api/Products/image?id=' + productID + '&productImage=' + imgId;
                let response = await fetch(deleteUrl, {
                    method: 'PUT',
                    body: JSON.stringify(putData),
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                let data = await response.text();
                alert('已刪除');
                divUneditProductimg.innerHTML = "";
                loadProduct();
            }
        }
        //單價限制
        thePrice.addEventListener('blur', event => {
            const value = parseFloat(event.target.value);
            const max = parseFloat(event.target.max);
            const min = parseFloat(event.target.min);
            if (value >= max)
                event.target.value = max.toString();
            if (value <= min)
                event.target.value = min.toString();
        });
        //獲取所有資料
        function getall() {
            if (putData.productName == "") { alert('請填寫商品名稱'); return; }
            if (putData.productDetail == "") { alert('請填寫商品詳細'); return; }
            putData.productName = productName.value;
            if (selectedcategory.value != "")
                putData.categoryId = parseInt(selectedcategory.value);
            putData.productUnitprice = parseInt(thePrice.value);
            putData.productDetail = detail.value;
            console.log(putData);
            editProducts();
        }
        
        //載入商品資料
        const loadProduct = async () => {
            //console.log('url=', url);
            let response = await fetch(url);
            let data = await response.json();
            console.log(data);

            putData.productName = data.productName;
            putData.categoryId = data.productCategoryId;
            putData.productUnitprice = data.unitPrice;
            putData.productDetail = data.productDetail;
            //顯示照片
            document.getElementById('preview').src = `data:image/jpeg;base64,${data.productImage}`;
            if (data.images) {
                var i = 0;
                for (var pic of data.base64Images) {
                    newPreview = `<div class="carousel-item">
                                    <img src="data:image/jpeg;base64,${pic}" class="d-block w-100" alt="Image Preview">
                                   </div>`;
                    productImage.insertAdjacentHTML('beforeend', newPreview);
                    uneditProductimg = `<button class="btn btn-remove" onclick="removeTheImage(this)">
                                            <img src="data:image/jpeg;base64,${pic}" id="${data.images[i].productImages}" alt="UneditProductimg" style="max-height:150px;">
                                            <span class="remove-icon">X</span>
                                        </button>`;
                    divUneditProductimg.insertAdjacentHTML('beforeend', uneditProductimg);
                    i++;
                }
            }

            //顯示資料
            s = data.productName;
            productName.value = s;
            s = '*' + data.productCategory;
            category.textContent = s;
            s = data.unitPrice;
            thePrice.value = s;
            s = data.productDetail;
            detail.innerHTML = s;
        }
        loadProduct();

        //儲存修改商品資料
        const editProducts = async () => {
            let response = await fetch(url, {
                method: 'PUT',
                body: JSON.stringify(putData),
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            let data = await response.text();
            alert('商品修改成功');
            setTimeout(() => {
                window.location.assign('https://localhost:7168/Admin/ProductList');
            }, 100);
        }
    </script>
}
